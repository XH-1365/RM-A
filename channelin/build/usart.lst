ARM GAS  /tmp/ccBa5wyV.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"usart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  20              		.align	1
  21              		.global	MX_USART2_UART_Init
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_USART2_UART_Init:
  27              	.LFB137:
  28              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** /* USER CODE BEGIN Header */
   2:Core/Src/usart.c **** /**
   3:Core/Src/usart.c ****   ******************************************************************************
   4:Core/Src/usart.c ****   * @file    usart.c
   5:Core/Src/usart.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/usart.c ****   *          of the USART instances.
   7:Core/Src/usart.c ****   ******************************************************************************
   8:Core/Src/usart.c ****   * @attention
   9:Core/Src/usart.c ****   *
  10:Core/Src/usart.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/usart.c ****   * All rights reserved.
  12:Core/Src/usart.c ****   *
  13:Core/Src/usart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/usart.c ****   * in the root directory of this software component.
  15:Core/Src/usart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** /* USER CODE END Header */
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** #include "stdio.h"
  25:Core/Src/usart.c **** 
  26:Core/Src/usart.c **** /* USER CODE END 0 */
  27:Core/Src/usart.c **** 
  28:Core/Src/usart.c **** UART_HandleTypeDef huart2;
  29:Core/Src/usart.c **** 
  30:Core/Src/usart.c **** /* USART2 init function */
ARM GAS  /tmp/ccBa5wyV.s 			page 2


  31:Core/Src/usart.c **** 
  32:Core/Src/usart.c **** void MX_USART2_UART_Init(void)
  33:Core/Src/usart.c **** {
  29              		.loc 1 33 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  34:Core/Src/usart.c **** 
  35:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 0 */
  36:Core/Src/usart.c **** 
  37:Core/Src/usart.c ****   /* USER CODE END USART2_Init 0 */
  38:Core/Src/usart.c **** 
  39:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 1 */
  40:Core/Src/usart.c **** 
  41:Core/Src/usart.c ****   /* USER CODE END USART2_Init 1 */
  42:Core/Src/usart.c ****   huart2.Instance = USART2;
  38              		.loc 1 42 3 view .LVU1
  39              		.loc 1 42 19 is_stmt 0 view .LVU2
  40 0002 0A48     		ldr	r0, .L5
  41 0004 0A4B     		ldr	r3, .L5+4
  42 0006 0360     		str	r3, [r0]
  43:Core/Src/usart.c ****   huart2.Init.BaudRate = 115200;
  43              		.loc 1 43 3 is_stmt 1 view .LVU3
  44              		.loc 1 43 24 is_stmt 0 view .LVU4
  45 0008 4FF4E133 		mov	r3, #115200
  46 000c 4360     		str	r3, [r0, #4]
  44:Core/Src/usart.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
  47              		.loc 1 44 3 is_stmt 1 view .LVU5
  48              		.loc 1 44 26 is_stmt 0 view .LVU6
  49 000e 0023     		movs	r3, #0
  50 0010 8360     		str	r3, [r0, #8]
  45:Core/Src/usart.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
  51              		.loc 1 45 3 is_stmt 1 view .LVU7
  52              		.loc 1 45 24 is_stmt 0 view .LVU8
  53 0012 C360     		str	r3, [r0, #12]
  46:Core/Src/usart.c ****   huart2.Init.Parity = UART_PARITY_NONE;
  54              		.loc 1 46 3 is_stmt 1 view .LVU9
  55              		.loc 1 46 22 is_stmt 0 view .LVU10
  56 0014 0361     		str	r3, [r0, #16]
  47:Core/Src/usart.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
  57              		.loc 1 47 3 is_stmt 1 view .LVU11
  58              		.loc 1 47 20 is_stmt 0 view .LVU12
  59 0016 0C22     		movs	r2, #12
  60 0018 4261     		str	r2, [r0, #20]
  48:Core/Src/usart.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  61              		.loc 1 48 3 is_stmt 1 view .LVU13
  62              		.loc 1 48 25 is_stmt 0 view .LVU14
  63 001a 8361     		str	r3, [r0, #24]
  49:Core/Src/usart.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
  64              		.loc 1 49 3 is_stmt 1 view .LVU15
  65              		.loc 1 49 28 is_stmt 0 view .LVU16
  66 001c C361     		str	r3, [r0, #28]
ARM GAS  /tmp/ccBa5wyV.s 			page 3


  50:Core/Src/usart.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
  67              		.loc 1 50 3 is_stmt 1 view .LVU17
  68              		.loc 1 50 7 is_stmt 0 view .LVU18
  69 001e FFF7FEFF 		bl	HAL_UART_Init
  70              	.LVL0:
  71              		.loc 1 50 6 view .LVU19
  72 0022 00B9     		cbnz	r0, .L4
  73              	.L1:
  51:Core/Src/usart.c ****   {
  52:Core/Src/usart.c ****     Error_Handler();
  53:Core/Src/usart.c ****   }
  54:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 2 */
  55:Core/Src/usart.c **** 
  56:Core/Src/usart.c ****   /* USER CODE END USART2_Init 2 */
  57:Core/Src/usart.c **** 
  58:Core/Src/usart.c **** }
  74              		.loc 1 58 1 view .LVU20
  75 0024 08BD     		pop	{r3, pc}
  76              	.L4:
  52:Core/Src/usart.c ****   }
  77              		.loc 1 52 5 is_stmt 1 view .LVU21
  78 0026 FFF7FEFF 		bl	Error_Handler
  79              	.LVL1:
  80              		.loc 1 58 1 is_stmt 0 view .LVU22
  81 002a FBE7     		b	.L1
  82              	.L6:
  83              		.align	2
  84              	.L5:
  85 002c 00000000 		.word	.LANCHOR0
  86 0030 00440040 		.word	1073759232
  87              		.cfi_endproc
  88              	.LFE137:
  90              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  91              		.align	1
  92              		.global	HAL_UART_MspInit
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  97              	HAL_UART_MspInit:
  98              	.LVL2:
  99              	.LFB138:
  59:Core/Src/usart.c **** 
  60:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  61:Core/Src/usart.c **** {
 100              		.loc 1 61 1 is_stmt 1 view -0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 32
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		.loc 1 61 1 is_stmt 0 view .LVU24
 105 0000 00B5     		push	{lr}
 106              	.LCFI1:
 107              		.cfi_def_cfa_offset 4
 108              		.cfi_offset 14, -4
 109 0002 89B0     		sub	sp, sp, #36
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 40
  62:Core/Src/usart.c **** 
ARM GAS  /tmp/ccBa5wyV.s 			page 4


  63:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 112              		.loc 1 63 3 is_stmt 1 view .LVU25
 113              		.loc 1 63 20 is_stmt 0 view .LVU26
 114 0004 0023     		movs	r3, #0
 115 0006 0393     		str	r3, [sp, #12]
 116 0008 0493     		str	r3, [sp, #16]
 117 000a 0593     		str	r3, [sp, #20]
 118 000c 0693     		str	r3, [sp, #24]
 119 000e 0793     		str	r3, [sp, #28]
  64:Core/Src/usart.c ****   if(uartHandle->Instance==USART2)
 120              		.loc 1 64 3 is_stmt 1 view .LVU27
 121              		.loc 1 64 16 is_stmt 0 view .LVU28
 122 0010 0268     		ldr	r2, [r0]
 123              		.loc 1 64 5 view .LVU29
 124 0012 154B     		ldr	r3, .L11
 125 0014 9A42     		cmp	r2, r3
 126 0016 02D0     		beq	.L10
 127              	.LVL3:
 128              	.L7:
  65:Core/Src/usart.c ****   {
  66:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 0 */
  67:Core/Src/usart.c **** 
  68:Core/Src/usart.c ****   /* USER CODE END USART2_MspInit 0 */
  69:Core/Src/usart.c ****     /* USART2 clock enable */
  70:Core/Src/usart.c ****     __HAL_RCC_USART2_CLK_ENABLE();
  71:Core/Src/usart.c **** 
  72:Core/Src/usart.c ****     __HAL_RCC_GPIOD_CLK_ENABLE();
  73:Core/Src/usart.c ****     /**USART2 GPIO Configuration
  74:Core/Src/usart.c ****     PD6     ------> USART2_RX
  75:Core/Src/usart.c ****     PD5     ------> USART2_TX
  76:Core/Src/usart.c ****     */
  77:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_5;
  78:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  79:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  80:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  81:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
  82:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
  83:Core/Src/usart.c **** 
  84:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 1 */
  85:Core/Src/usart.c **** 
  86:Core/Src/usart.c ****   /* USER CODE END USART2_MspInit 1 */
  87:Core/Src/usart.c ****   }
  88:Core/Src/usart.c **** }
 129              		.loc 1 88 1 view .LVU30
 130 0018 09B0     		add	sp, sp, #36
 131              	.LCFI3:
 132              		.cfi_remember_state
 133              		.cfi_def_cfa_offset 4
 134              		@ sp needed
 135 001a 5DF804FB 		ldr	pc, [sp], #4
 136              	.LVL4:
 137              	.L10:
 138              	.LCFI4:
 139              		.cfi_restore_state
  70:Core/Src/usart.c **** 
 140              		.loc 1 70 5 is_stmt 1 view .LVU31
 141              	.LBB2:
ARM GAS  /tmp/ccBa5wyV.s 			page 5


  70:Core/Src/usart.c **** 
 142              		.loc 1 70 5 view .LVU32
 143 001e 0021     		movs	r1, #0
 144 0020 0191     		str	r1, [sp, #4]
  70:Core/Src/usart.c **** 
 145              		.loc 1 70 5 view .LVU33
 146 0022 03F5FA33 		add	r3, r3, #128000
 147 0026 1A6C     		ldr	r2, [r3, #64]
 148 0028 42F40032 		orr	r2, r2, #131072
 149 002c 1A64     		str	r2, [r3, #64]
  70:Core/Src/usart.c **** 
 150              		.loc 1 70 5 view .LVU34
 151 002e 1A6C     		ldr	r2, [r3, #64]
 152 0030 02F40032 		and	r2, r2, #131072
 153 0034 0192     		str	r2, [sp, #4]
  70:Core/Src/usart.c **** 
 154              		.loc 1 70 5 view .LVU35
 155 0036 019A     		ldr	r2, [sp, #4]
 156              	.LBE2:
  70:Core/Src/usart.c **** 
 157              		.loc 1 70 5 view .LVU36
  72:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 158              		.loc 1 72 5 view .LVU37
 159              	.LBB3:
  72:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 160              		.loc 1 72 5 view .LVU38
 161 0038 0291     		str	r1, [sp, #8]
  72:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 162              		.loc 1 72 5 view .LVU39
 163 003a 1A6B     		ldr	r2, [r3, #48]
 164 003c 42F00802 		orr	r2, r2, #8
 165 0040 1A63     		str	r2, [r3, #48]
  72:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 166              		.loc 1 72 5 view .LVU40
 167 0042 1B6B     		ldr	r3, [r3, #48]
 168 0044 03F00803 		and	r3, r3, #8
 169 0048 0293     		str	r3, [sp, #8]
  72:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 170              		.loc 1 72 5 view .LVU41
 171 004a 029B     		ldr	r3, [sp, #8]
 172              	.LBE3:
  72:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 173              		.loc 1 72 5 view .LVU42
  77:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 174              		.loc 1 77 5 view .LVU43
  77:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 175              		.loc 1 77 25 is_stmt 0 view .LVU44
 176 004c 6023     		movs	r3, #96
 177 004e 0393     		str	r3, [sp, #12]
  78:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 178              		.loc 1 78 5 is_stmt 1 view .LVU45
  78:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 179              		.loc 1 78 26 is_stmt 0 view .LVU46
 180 0050 0223     		movs	r3, #2
 181 0052 0493     		str	r3, [sp, #16]
  79:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 182              		.loc 1 79 5 is_stmt 1 view .LVU47
ARM GAS  /tmp/ccBa5wyV.s 			page 6


  80:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 183              		.loc 1 80 5 view .LVU48
  80:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 184              		.loc 1 80 27 is_stmt 0 view .LVU49
 185 0054 0323     		movs	r3, #3
 186 0056 0693     		str	r3, [sp, #24]
  81:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 187              		.loc 1 81 5 is_stmt 1 view .LVU50
  81:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 188              		.loc 1 81 31 is_stmt 0 view .LVU51
 189 0058 0723     		movs	r3, #7
 190 005a 0793     		str	r3, [sp, #28]
  82:Core/Src/usart.c **** 
 191              		.loc 1 82 5 is_stmt 1 view .LVU52
 192 005c 03A9     		add	r1, sp, #12
 193 005e 0348     		ldr	r0, .L11+4
 194              	.LVL5:
  82:Core/Src/usart.c **** 
 195              		.loc 1 82 5 is_stmt 0 view .LVU53
 196 0060 FFF7FEFF 		bl	HAL_GPIO_Init
 197              	.LVL6:
 198              		.loc 1 88 1 view .LVU54
 199 0064 D8E7     		b	.L7
 200              	.L12:
 201 0066 00BF     		.align	2
 202              	.L11:
 203 0068 00440040 		.word	1073759232
 204 006c 000C0240 		.word	1073875968
 205              		.cfi_endproc
 206              	.LFE138:
 208              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 209              		.align	1
 210              		.global	HAL_UART_MspDeInit
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 215              	HAL_UART_MspDeInit:
 216              	.LVL7:
 217              	.LFB139:
  89:Core/Src/usart.c **** 
  90:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
  91:Core/Src/usart.c **** {
 218              		.loc 1 91 1 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		.loc 1 91 1 is_stmt 0 view .LVU56
 223 0000 08B5     		push	{r3, lr}
 224              	.LCFI5:
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 3, -8
 227              		.cfi_offset 14, -4
  92:Core/Src/usart.c **** 
  93:Core/Src/usart.c ****   if(uartHandle->Instance==USART2)
 228              		.loc 1 93 3 is_stmt 1 view .LVU57
 229              		.loc 1 93 16 is_stmt 0 view .LVU58
 230 0002 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccBa5wyV.s 			page 7


 231              		.loc 1 93 5 view .LVU59
 232 0004 064B     		ldr	r3, .L17
 233 0006 9A42     		cmp	r2, r3
 234 0008 00D0     		beq	.L16
 235              	.LVL8:
 236              	.L13:
  94:Core/Src/usart.c ****   {
  95:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
  96:Core/Src/usart.c **** 
  97:Core/Src/usart.c ****   /* USER CODE END USART2_MspDeInit 0 */
  98:Core/Src/usart.c ****     /* Peripheral clock disable */
  99:Core/Src/usart.c ****     __HAL_RCC_USART2_CLK_DISABLE();
 100:Core/Src/usart.c **** 
 101:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 102:Core/Src/usart.c ****     PD6     ------> USART2_RX
 103:Core/Src/usart.c ****     PD5     ------> USART2_TX
 104:Core/Src/usart.c ****     */
 105:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOD, GPIO_PIN_6|GPIO_PIN_5);
 106:Core/Src/usart.c **** 
 107:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 108:Core/Src/usart.c **** 
 109:Core/Src/usart.c ****   /* USER CODE END USART2_MspDeInit 1 */
 110:Core/Src/usart.c ****   }
 111:Core/Src/usart.c **** }
 237              		.loc 1 111 1 view .LVU60
 238 000a 08BD     		pop	{r3, pc}
 239              	.LVL9:
 240              	.L16:
  99:Core/Src/usart.c **** 
 241              		.loc 1 99 5 is_stmt 1 view .LVU61
 242 000c 054A     		ldr	r2, .L17+4
 243 000e 136C     		ldr	r3, [r2, #64]
 244 0010 23F40033 		bic	r3, r3, #131072
 245 0014 1364     		str	r3, [r2, #64]
 105:Core/Src/usart.c **** 
 246              		.loc 1 105 5 view .LVU62
 247 0016 6021     		movs	r1, #96
 248 0018 0348     		ldr	r0, .L17+8
 249              	.LVL10:
 105:Core/Src/usart.c **** 
 250              		.loc 1 105 5 is_stmt 0 view .LVU63
 251 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 252              	.LVL11:
 253              		.loc 1 111 1 view .LVU64
 254 001e F4E7     		b	.L13
 255              	.L18:
 256              		.align	2
 257              	.L17:
 258 0020 00440040 		.word	1073759232
 259 0024 00380240 		.word	1073887232
 260 0028 000C0240 		.word	1073875968
 261              		.cfi_endproc
 262              	.LFE139:
 264              		.section	.text._write,"ax",%progbits
 265              		.align	1
 266              		.global	_write
 267              		.syntax unified
ARM GAS  /tmp/ccBa5wyV.s 			page 8


 268              		.thumb
 269              		.thumb_func
 271              	_write:
 272              	.LVL12:
 273              	.LFB140:
 112:Core/Src/usart.c **** 
 113:Core/Src/usart.c **** /* USER CODE BEGIN 1 */
 114:Core/Src/usart.c **** 
 115:Core/Src/usart.c **** //重定义printf,注意这是在GCC编译的环境下达成
 116:Core/Src/usart.c **** 
 117:Core/Src/usart.c **** int _write (int fd, char *pBuffer, int size)  
 118:Core/Src/usart.c **** {
 274              		.loc 1 118 1 is_stmt 1 view -0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 279              		.loc 1 118 1 is_stmt 0 view .LVU66
 280 0000 1046     		mov	r0, r2
 281              	.LVL13:
 119:Core/Src/usart.c ****   for (int i = 0; i < size; i++)  
 282              		.loc 1 119 3 is_stmt 1 view .LVU67
 283              	.LBB4:
 284              		.loc 1 119 8 view .LVU68
 285              		.loc 1 119 12 is_stmt 0 view .LVU69
 286 0002 4FF0000C 		mov	ip, #0
 287              		.loc 1 119 3 view .LVU70
 288 0006 0AE0     		b	.L20
 289              	.LVL14:
 290              	.L21:
 120:Core/Src/usart.c ****   {
 121:Core/Src/usart.c ****     while((USART2->SR&0X40)==0);//等待上一次串口数据发送完成  
 291              		.loc 1 121 32 is_stmt 1 discriminator 1 view .LVU71
 292              		.loc 1 121 10 discriminator 1 view .LVU72
 293              		.loc 1 121 18 is_stmt 0 discriminator 1 view .LVU73
 294 0008 064B     		ldr	r3, .L22
 295 000a 1B68     		ldr	r3, [r3]
 296              		.loc 1 121 10 discriminator 1 view .LVU74
 297 000c 13F0400F 		tst	r3, #64
 298 0010 FAD0     		beq	.L21
 122:Core/Src/usart.c ****     USART2->DR = (int8_t) *(pBuffer+i);       //写DR,串口2将发送数据
 299              		.loc 1 122 5 is_stmt 1 discriminator 2 view .LVU75
 300              		.loc 1 122 18 is_stmt 0 discriminator 2 view .LVU76
 301 0012 11F90C20 		ldrsb	r2, [r1, ip]
 302              		.loc 1 122 16 discriminator 2 view .LVU77
 303 0016 034B     		ldr	r3, .L22
 304 0018 5A60     		str	r2, [r3, #4]
 119:Core/Src/usart.c ****   for (int i = 0; i < size; i++)  
 305              		.loc 1 119 29 is_stmt 1 discriminator 2 view .LVU78
 119:Core/Src/usart.c ****   for (int i = 0; i < size; i++)  
 306              		.loc 1 119 30 is_stmt 0 discriminator 2 view .LVU79
 307 001a 0CF1010C 		add	ip, ip, #1
 308              	.LVL15:
 309              	.L20:
 119:Core/Src/usart.c ****   for (int i = 0; i < size; i++)  
 310              		.loc 1 119 19 is_stmt 1 discriminator 1 view .LVU80
 119:Core/Src/usart.c ****   for (int i = 0; i < size; i++)  
ARM GAS  /tmp/ccBa5wyV.s 			page 9


 311              		.loc 1 119 3 is_stmt 0 discriminator 1 view .LVU81
 312 001e 8445     		cmp	ip, r0
 313 0020 F2DB     		blt	.L21
 314              	.LBE4:
 123:Core/Src/usart.c ****   }  
 124:Core/Src/usart.c ****   return size;
 315              		.loc 1 124 3 is_stmt 1 view .LVU82
 125:Core/Src/usart.c **** }
 316              		.loc 1 125 1 is_stmt 0 view .LVU83
 317 0022 7047     		bx	lr
 318              	.L23:
 319              		.align	2
 320              	.L22:
 321 0024 00440040 		.word	1073759232
 322              		.cfi_endproc
 323              	.LFE140:
 325              		.global	huart2
 326              		.section	.bss.huart2,"aw",%nobits
 327              		.align	2
 328              		.set	.LANCHOR0,. + 0
 331              	huart2:
 332 0000 00000000 		.space	72
 332      00000000 
 332      00000000 
 332      00000000 
 332      00000000 
 333              		.text
 334              	.Letext0:
 335              		.file 2 "/home/yellow/study/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_
 336              		.file 3 "/home/yellow/study/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 337              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f427xx.h"
 338              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 339              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 340              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 341              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 342              		.file 9 "Core/Inc/main.h"
 343              		.file 10 "Core/Inc/usart.h"
ARM GAS  /tmp/ccBa5wyV.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccBa5wyV.s:20     .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccBa5wyV.s:26     .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccBa5wyV.s:85     .text.MX_USART2_UART_Init:000000000000002c $d
     /tmp/ccBa5wyV.s:91     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccBa5wyV.s:97     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccBa5wyV.s:203    .text.HAL_UART_MspInit:0000000000000068 $d
     /tmp/ccBa5wyV.s:209    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccBa5wyV.s:215    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccBa5wyV.s:258    .text.HAL_UART_MspDeInit:0000000000000020 $d
     /tmp/ccBa5wyV.s:265    .text._write:0000000000000000 $t
     /tmp/ccBa5wyV.s:271    .text._write:0000000000000000 _write
     /tmp/ccBa5wyV.s:321    .text._write:0000000000000024 $d
     /tmp/ccBa5wyV.s:331    .bss.huart2:0000000000000000 huart2
     /tmp/ccBa5wyV.s:327    .bss.huart2:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
